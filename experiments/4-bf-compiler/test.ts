import $ from "https://deno.land/x/dax@0.38.0/mod.ts"
import dedent from "npm:dedent@1.5.1"
import { assertEquals } from "https://deno.land/std@0.220.0/assert/mod.ts"

const bf = async (program: string) => {
  await $`clang bf.c -o bf`
  await $`echo ${program} | ./bf > tmp.ll`
  await $`llc ./tmp.ll -o tmp.s`
  await $`clang tmp.s -o tmp`
  const result = await $`./tmp`.text()
  await $`rm tmp.ll tmp.s tmp`
  return result
}

Deno.test("ABC", async () => {
  const program = dedent`
    ++++++++++++++++++++++++++++++++++++++++
    +++++++++++++++++++++++++.+.+.
  `
  const result = await bf(program)

  assertEquals(result, "ABC")
})

Deno.test("Hello World!", async () => {
  const program = dedent`
    +++++++++[>++++++++>+++++++++++>+++>+<<<<-]>.>++.+++++++..+++.
    >+++++.<<+++++++++++++++.>.+++.------.--------.>+.>+.
  `
  const result = await bf(program)

  assertEquals(result, "Hello World!")
})

Deno.test("Fibonacci", async () => {
  const program = dedent`
    >>+++++++++++[-<<++++>+++>>+<]>>+<++<<->>[>>>++++++++++<<[->+>-[>+>>]>[+[-<+>]>+
    >>]<<<<<<]>>[-]>>>++++++++++<[->-[>+>>]>[+[-<+>]>+>>]<<<<<]>[-]>>[>++++++[-<++++
    ++++>]<.<<+>+>[-]]<[<[->-<]++++++[->++++++++<]>.[-]]<<++++++[-<++++++++>]<.[-]<<
    [-<+>]<<[->>+>+<<<]>>>[-<<<+>>>]<-[<<<<<.>.>>>>[-]]<[->+>+<<]>>[-<<+>>]<<<<[->>+
    <<]>>>[-<<<+>>>]<<-]
  `
  const result = await bf(program)

  assertEquals(result, "1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233")
})

Deno.test("Prime", async () => {
  const program = dedent`
    ++++++++++[->+++++>++++>+++<<<]>>++++>++>>+>+++<<<<<.>>>>>[<[-]++<[-]+>>>+[<[->>
    +<<]<[->>>>+>+<<<<<]>>>>[-<<<<+>>>>]<[->+>-[>+>>]>[+[-<+>]>+>>]<<<<<<]>[-<<<+>>>
    ]>[-]>[-<<+>+>]<<[->>+<<]+>[<[-]>[-]]<[<<<<<[-]>>>>>[-]]>[-]>[-]>[-]<<<<<<-<[->>
    >+>+<<<<]>>>>[-<<<<+>>>>]<<<[->>>>+>+<<<<<]>>>>>[-<<<<<+>>>>>]<<<+[->>[->+>+<<]>
    >[-<<+>>]+<[>-<<->[-]]>[<<<+<[-]>>>>[-]]<[-]<<<]>>[-]<[<<->>[-]]<[-]<<+<[->>>+>+
    <<<<]>>>>[-<<<<+>>>>]>+++++++++++++<<[->>[->+>+<<]>>[-<<+>>]+<[>-<<->[-]]>[<<<+<
    [-]>>>>[-]]<[-]<<<]>>[-]<[<<[-[-]]>>[-]]<[-]<<<+>>]<<<[<.>>>>>++++++++++<<[->+>-
    [>+>>]>[+[-<+>]>+>>]<<<<<<]>[-<+>]>[-]>>>++++++++++<[->-[>+>>]>[+[-<+>]>+>>]<<<<
    <]>[-]>>[>++++++[-<++++++++>]<.<<+>+>[-]]<[<[->-<]++++++[->++++++++<]>.[-]]>[-]<
    <<++++++[-<++++++++>]<.[-]<<<<<[-]]>>+]
  `
  const result = await bf(program)

  assertEquals(result, "2 3 5 7 11 13 17 19 23 29 31 37 41 43 47 53 59 61 67 71 73 79 83 89 97 101 103 107 109 113 127 131 137 139 149 151 157 163 167 173 179 181 191 193 197 199 211 223 227 229 233 239 241 251")
})
